                                              | next screen
                                              | 
style upload picture format                   |      
> sign name     <text field>                              |   details of creators
> style name    <text field>                  |   extra information to write
> collection or album name

laundry upload format
> name : phone number      <text field>                   |
>  type of cloth : how many for each  <dropdown menu>
> white or not       <dropdown menu>
> price

dress making upload format                    |  measurement of client
> name      <text field>
> type of dress to be made    <dropdown menu> 
> type of material to be sewn  <dropdown menu>
> price  <text field>

/////
from top to botttom
>fullname

>phone number

>address

>what material to use>> select from 
\\camera  \\picture  \\browse materials picture to buy from online

>what style to sew or use>> select from
\\camera  \\picture  \\browse styles online to sew from

>what measurement to use>> select from
\\generic(one for all measurement) \\specific(measure for only one cloth)


>other informations





///<<<<<<<<<<<<<<< style Upload Form

extension StyleUploadFormWidget on StyleUploadScreenState {
  Widget styleUploadForm(BuildContext context) {
    return (Column(
      mainAxisAlignment: MainAxisAlignment.spaceAround,
      children: [
        SizedBox(
          width: 300,
          child: TextField(
            onChanged: (value) => setState(() {
              styleTeleportData.styleName = value;
            }),
            decoration: const InputDecoration(hintText: 'unique style name'),
          ),
        ),
        const SizedBox(width: 20),
        SizedBox(
          width: 300,
          height: 400,
          child: TextField(
            onChanged: (value) => setState(() {
              styleTeleportData.signName = value;
              debugPrint(styleTeleportData.signName);
            }),
            decoration: const InputDecoration(hintText: 'signed name'),
          ),
        ),
        const SizedBox(width: 20),
        DropdownMenu(
          onSelected: (value) {
            setState(() {
              styleTeleportData.styleType = value;
            });
          },
          dropdownMenuEntries: const [
            DropdownMenuEntry(value: 'single', label: 'single'),
            DropdownMenuEntry(value: 'collection', label: 'collection'),
            DropdownMenuEntry(value: 'album', label: 'album')
          ],
          hintText: 'single',
          helperText: 'single',
          width: 200,
        ),
        const SizedBox(width: 20),
        SizedBox(
          width: styleTeleportData.styleType == 'single' ? 0 : 300,
          child: TextField(
            onChanged: (value) => setState(() {
              styleTeleportData.styleTypeDetails = value;
            }),
            decoration: InputDecoration(
                suffixText: styleTeleportData.styleType == 'collection'
                    ? 'collection'
                    : 'album',
                hintText: styleTeleportData.styleType == 'collection'
                    ? 'enter collection name'
                    : 'enter album name'),
          ),
        ),
        const SizedBox(width: 20),
        ElevatedButton(
          onPressed: () {
            debugPrint('oky');
            //  loundryUploadPainter.createImage();
            debugPrint('oky again');
          },
          style: const ButtonStyle(
            fixedSize: MaterialStatePropertyAll(Size.fromHeight(35)),
          ),
          child: const Text('push'),
        ),
      ],
    ));
  }
  //
  //
  //>>>>>>>>>>>>>>>>> style upload form

  //new feature

    a part of your profile where other
    users can see what you are wearing at the mooment



// account and proposed expenses

>stool        4,000
>edo cash     5,000 
>table      
>rent new apartment 100,000

total 18,500

cash at hand & bank #10,500


>>>>>> 13th August, 2023,
New feature to work on for this new week on blue app is 
>>learn provider and send data accros widget without passing it down especially palette
>>use hive a lot more to locally save and provide data all across the app
>>explore screen rendering data from my upstash database randomly
>> search screen category been able to render data by category and randomly
>> search screen should have a tile that enable users to create their own category and push it us for approval
>>notification screen, defining the tabs to each have their own screen, and which will be a future or list builder
done  >>profile should render data from a user login or sign in data first from cached values then from net.


 